// Utilities
@use "sass:string";
@import "variables";

// mixin to create margin and padding classes p-0,ps-5,mt-2 etc.
@mixin createUtilityClasses($map, $attr-name) {
  $prefix: string.slice($attr-name, 1, 1);

  @each $key, $val in $padding {
    @include generate-classes($prefix, $val, $key, $attr-name);
  }
}

@mixin generate-classes($prefix, $val, $key, $attr-name) {
  .#{$prefix}-#{$key} {
    #{$attr-name}: $val;
  }

  .#{$prefix}s-#{$key} {
    #{$attr-name}-left: $val;
  }

  .#{$prefix}e-#{$key} {
    #{$attr-name}-right: $val;
  }

  .#{$prefix}t-#{$key} {
    #{$attr-name}-top: $val;
  }

  .#{$prefix}b-#{$key} {
    #{$attr-name}-bottom: $val;
  }

  .#{$prefix}x-#{$key} {
    #{$attr-name}-left: $val;
    #{$attr-name}-right: $val;
  }

  .#{$prefix}y-#{$key} {
    #{$attr-name}-top: $val;
    #{$attr-name}-bottom: $val;
  }
}

// Rendering padding classes p-0,p-1 .. p-5
$padding: (
  "0": 0px,
  "1": $base-padding,
  "2": $base-padding * 2,
  "3": $base-padding * 4,
  "4": $base-padding * 8,
  "5": $base-padding * 16,
  "6": $base-padding * 24,
  "7": $base-padding * 48,
  "8": $base-padding * 56,
  "auto": auto,
);

// Rendering margin classes m-0,m-1 .. m-5
$margin: (
  "0": 0px,
  "1": $base-margin,
  "2": $base-margin * 2,
  "3": $base-margin * 4,
  "4": $base-margin * 8,
  "5": $base-margin * 16,
  "6": $base-margin * 24,
  "7": $base-margin * 48,
  "8": $base-margin * 56,
  "auto": auto,
);

// calling mixin to create classes
@include createUtilityClasses($padding, "padding");
@include createUtilityClasses($margin, "margin");

// width and height
.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}

// flex position classes
$flex-attr: center, start, end, left, right, normal, flex-end, flex-start,
  stretch, inherit, space-between, space-around, space-evenly;

@each $val in $flex-attr {
  .justify-content-#{$val} {
    justify-content: $val;
  }

  .align-items-#{$val} {
    align-items: $val;
  }
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-column {
  flex-direction: column;
}
// display classes
$display-attr: flex, inline, inline-block, block, flex-inline;

@each $val in $display-attr {
  .d-#{$val} {
    display: $val;
  }
}

// mixin to create margin and padding classes p-0,ps-5,mt-2 etc.
@mixin createMediaClasses($map, $attr-name) {
  $prefix: string.slice($attr-name, 1, 1);

  @each $key, $val in $padding {
    @include xs {
      @include generate-classes(
        $prefix,
        $val,
        string.insert("xs-", $key, -1),
        $attr-name
      );
    }
  }

  @each $key, $val in $padding {
    @include sm {
      @include generate-classes(
        $prefix,
        $val,
        string.insert("sm-", $key, -1),
        $attr-name
      );
    }
  }

  @each $key, $val in $padding {
    @include md {
      @include generate-classes(
        $prefix,
        $val,
        string.insert("md-", $key, -1),
        $attr-name
      );
    }
  }

  @each $key, $val in $padding {
    @include lg {
      @include generate-classes(
        $prefix,
        $val,
        string.insert("lg-", $key, -1),
        $attr-name
      );
    }
  }

  @each $key, $val in $padding {
    @include xl {
      @include generate-classes(
        $prefix,
        $val,
        string.insert("xl-", $key, -1),
        $attr-name
      );
    }
  }
}

.mb-50p {
  margin-bottom: 50px;
}

// Text utilities
.ws-nowrap {
  white-space: nowrap;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

// calling mixin to create media classes
@include createMediaClasses($padding, "padding");
@include createMediaClasses($margin, "margin");
