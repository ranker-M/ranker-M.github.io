@use "sass:math";
@import "./breakpoints";

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

// col classes
@include xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

.container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: 0 30px;
  box-sizing: border-box;
  text-align: center;
  .row {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
  }

  // grid gaps
  @each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
      padding: $val;
    }
    .gap-#{$key} {
      margin-left: -$val;
      margin-right: -$val;
    }
  }
}

.container-fluid {
  @extend .container;
  max-width: 100%;
}
